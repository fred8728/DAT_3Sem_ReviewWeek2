
# Fundamental Network Topics
## What is your public IP address right now, and how did you find it?
Jeg fandt min offentlige ip-adresse ved, at gå ind på ”whatsmyip"
Min offentlige ip-adresse er: 5.179.80.205

## What is your private IP address right now (do this both at home and in school), and who/what gave you that address?
Man finder sin nuværende ip-adresse ved, at skrive ipconfig i terminal. 
Den nuværende IP-adresse er 10.50.130.41

## What’s special about these address ranges? – binary
Nedenstående er private IPv4 netværks ranges – hvor første er klasse a, anden er klasse b og tredje er klasse b. Det at en ip-adresse er privat betyder, at den er reserveret til intern brug bag en router eller en anden netværks enhed væk fra det offentlige – man kan også kalde en privat ip-adresse for en lokal ip-adresse. 
Et eksempel: Vi kører fx på skolen netværk og har derfor hver især en privat ip-adresse.

```python
10.0.0.0 – 10.255.255.255 
172.16.0.0 – 172.31.255.255  
92.168.0.0 – 192.168.255.255
```

## What’s special about this ip-address: 127.0.0.1?
Det er en reserveret IP-adresse, hvilket betyder at den har et specifikt job i IP. Denne IP-adresse er for eksempel reserveret til, at identificere den computer der bliver brugt lige nu – dvs. hvis man kommunikere med denne ip-adresse kommunikere man med sig selv.

## What kind of service would you expect to find on a server using these ports: 22, 23, 25, 53, 80, 443?

```python
Port	
22	SSH Remote Login Protokol
23	Telnet
25	Simple mail transfer protocol(SMTP)
53	Domain name system (DNS)
80	HTTP
443	HTTPS
```
## What is the IP address of studypoints.dk and how did you find it?
Man finder et domæne navns ip-adresse ved, at skrive nslookup + domæne i terminal.
IP-adressen for studypoints.dk er: 165.227.137.75

## If you write https://studypoints.dk in your browser, how did “it” figure out that it should go to the IP address you discovered above?
Når brugeren indtaster et domæne bliver der taget kontakt til en DNS server. Hvis det er tilfældet, at domænenavnet ikke eksisterer i databasen på DNS serveren vil denne server tage kontakt til en ny. Den DNS server, som har domænet i databasen har ligeledes ip-adressen, som bliver sendt tilbage samme vej til brugeren og brugeren vil nu blive sendt til det indtastede domæne. 

## Explain shortly the purpose of an ip-address and a port-number and why we need both
Formålet med ip-adresser er, at kunne identificere en host eller en gruppe af hosts på et netværk, hvorimod port-numre anvendes til at identificere en bestemt applikation/service, som du gerne vil kommunikere med på dit system. 
Det vil altså sige, at en ip-adresse er en adresse i dit system, som bliver tildelt idet du forbinder din computer til et internet. Hvorimod en port er et id af en server og sørger for, at få data til den rigtige lokation. 
Note: Alle computere med ip-adresser har en ipv4 adresse – der er mere som er begyndt at bruge de nye IPv6 adresser. 

## What is your (nearest) DNS server?
Ens DNS server bliver konfigureret i ens netværksindstillinger. Er det tilfældet, at du ikke selv konfigurerer din DNS i kontrolpanelet kan du placere den i din router – sætter du ikke din DNS i din router vil din ISP beslutte hvilken DNS du anvender.
Note: Jeg har prøvet, at komme ind og finde min DNS server på min computer – dog uden held. 
 

## What is (conceptually) the DNS system and the purpose with a DNS Server?
DNS system er en protokol, som sætter standarden for, hvordan computere udveksler data på nettet og på mange private netværker. 
Formålet ved DNS er, at kunne identificere en ip-adresse gennem et domæne.
Eksempel: Brugeren indtaster domæne, som tager kontakt til en DNS server. DNS serveren tjekker om domænet eksisterer i databasen – er dette ikke tilfældet vil denne DNS server tage kontakt til en ny. Når domænet er fundet vil den/de tidligere DNS servere gemme ip-adresse i en periode i tilfælde af, at brugeren sender flere requests. Brugeren vil nu blive sendt til det indtastede domæne via ip-adressen. 

## What is your current Gateway, and how did you find it?
Du finder din nuværende Gateway ved, at indtaste ipconfig i terminal. Min nuværende default Gateway er 172.20.10.1

## What is the address of your current DHCP-Server, and how did you find it?
Jeg har forsøgt, at finde min DHCP-server via følgende command: ipconfig /all | find /i "DHCP Server" – dog uden held. Har ligeledes forsøgt med ipconfig /all. 


## Explain (conceptually) about the TCP/IP-protocol stack
TCP/IP-protokol stack er en af verdens mest anvendte protokoller, idet den gør det muligt for computere, som anvender forskellige hardware- og softwareplatforme på forskellige typer netværk at kommunikere. TCP/IP er en samling af protokoller, som er opkaldt efter dens to mest kendte og vigtigste protokoller – Transmission Control Protokol (TCP) og Internet Protokol (IP). 
TCP/IP-protokol stack  indeholder low-level protokoller, men også flere protokoller på et high-level niveau. 

 
TCP/IP lag:
Man kan sætte protokollen op i lag og derfor sammenligne den med andre ”lag”-modeller – fx OSI Reference model.
Nedenstående ses de fire forskellige lag – fra højeste til laveste niveau
 
## Explain about the HTTP Protocol (the following exercises will go much deeper into this protocol)
Note: HTTP står for Hyper Text Transfer Protocol
HTTP er en protokol, som primært anvendes til at kommunikere på WWW (World Wide Web). Kommunikationen mellem klient computeren og web servere sker ved, at sende HTTP requests og modtage http responses.
```python
8 forespørgsler en klient kan anmode om:
•	GET – Bede om/læse en webside.
•	HEAD – Læse en websides headerinformation.
•	POST – Sender information til en webside (f.eks. fra formular hvor brugeren har udfyldt nogle oplysninger).
•	PUT – (Over)skrive en webside (dvs. lagre en ny version).
•	DELETE – Slette en webside.
•	TRACE – Sende forespørgslen uændret tilbage (for at kontrollere forbindelsen)
•	OPTIONS – Spørger hvilke metoder serveren understøtter.
•	CONNECT – Anvendes med proxy-servere til SSL-tunneller.
```
## Explain (conceptually) how HTTP and TCP/IP are connected (what can HTTP do, and where does it fit into TCP/IP)
Som jeg beskrev tidligere kan man inddele TCP/IP protokollen op i 4 forskellige lag – kig evt på modellen imens. Hvis vi starter med, at kigge på internetlaget, som størstedelen af tiden bliver domineret af IP (internet protokol) – internettet tager kontakt til en computer langt langt væk. Det er din router, som håndterer trafikken fra dit lokale netværk til det netværk, hvor den anden computer er (hvor dens eget linklag sørger for, at få ”pakkerne” til den rigtige computer). 
Dernæst kommer vi op til transportlaget – den computer vi har taget kontakt til skal levere en besked  tilbage – dette bliver gjort via TCP eller UDP, som tidligere nævnt er en transportlagsprotokol. 
Vi har nu tilsluttet browseren til webserverens software og ved hjælp af HTTP i applikationslaget ved serveren hvilken side der ønskes. 
